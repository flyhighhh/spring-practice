<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	<!-- 
		aop 설정하기
		1. aop:config태그를 이용
			aop:aspect AOP실행 메소드를 가지고 있는 클래스 등록
				aop:pointcut -> 적용대상을 패턴으로 등록
				aop:before|after|afterReturning... 적용시점, 메소드지정
	-->
	<!-- <bean id="loggerAspect" class="com.hello.spring.common.aop.LoggerAspect"/>
	<aop:config>
		<aop:aspect ref="loggerAspect">
			<aop:pointcut expression="execution(* com.hello.spring.memo..*(..))" id="loggerPc"/>
			<aop:before method="loggerBefore" pointcut-ref="loggerPc"/>
		</aop:aspect>
	</aop:config> -->
	
	
	<aop:aspectj-autoproxy/>
		

</beans>
